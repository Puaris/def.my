<?php
namespace lib\Tg;
use incl\Tg As Tg;
Error_Reporting(E_ALL & ~E_NOTICE);ini_set('display_errors',0);
set_include_path(get_include_path().PATH_SEPARATOR.'../../');spl_autoload_register();

$base= new Base(\incl\Tg\Opt::TOKEN['MSB']);
$menu= new Tg\Menu();

//–∫—É–¥–∞-—Ç–æ –≤—Å—É–Ω—É—Ç—å
$data = file_get_contents('php://input');


//–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ —Ñ–∞–π–ª
$base->writeLogFile( __DIR__.'/message.txt',$data,true);


//$chat_id = -594377170;
//$chatId = 5526800205;

$arrDataAnswer = json_decode($data, true);

if(!empty($arrDataAnswer["message"])){

  $textMessage = $arrDataAnswer["message"]["text"];
  $chatId = $arrDataAnswer["message"]["chat"]["id"];  
  
  switch ($textMessage) {
    // –µ—Å–ª–∏ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
    case '/start':
          $textMessage=new Hello().', '.$arrDataAnswer['message']['from']['first_name'].'!';
          $getQuery =[
            "chat_id"     => $chatId,
            "text"        => $textMessage,
            "parse_mode"  => "html"
          ];
          $base->sendCurlInTg($getQuery);

          $base->sendCurlInTg($menu->MainMenu($chatId));
    break;
   
    case Tg\Transport::Btn['MainMenu']://–¢—É—Ç –Ω–∞–¥–æ –º–µ–Ω—é - –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      $base->sendCurlInTg($menu->MainMenu($chatId));
    break;
//Bus menu
    case Tg\Menu::Btn['Transport']://–ü–µ—Ä–≤–æ–µ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ 'Transport'=>'üöï–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      $transport=new Tg\Transport();
      $base->sendCurlInTg($transport->FirstMenu($chatId));
    break;
    case Tg\Transport::Btn['Bus']://–í—Ç–æ—Ä–æ–µ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ 'Bus'=>'üöå –ê–≤—Ç–æ–±—É—Å',
      $transport=new Tg\Transport();
      $base->sendCurlInTg($transport->SecondMenuBus($chatId));
    break;
    case Tg\Transport::Btn['BusMarshrut']://–í—Ç–æ—Ä–æ–µ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ 'BusMarshrut'=>'üåç –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã'
      $transport=new Tg\Transport();
      $base->sendCurlInTg($transport->BusMarshrutMenu($chatId));
    break;




    case Tg\Menu::Btn['Info']://–ü–µ—Ä–≤–æ–µ –º–µ–Ω—é –∏–Ω—Ñ–æ
        $textMessage='–û–±—Ä–∞–±–æ—Ç–∞—Ç—å Info)';
        $getQuery =[
          "chat_id"     => $chatId,
          "text"        => $textMessage,
          "parse_mode"  => "html"
        ];
        $base->sendCurlInTg($getQuery);
    break;



        // –Ω–µ–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –ø–æ—É–º–æ–ª—á–∞–Ω–∏—é
    default:
            $textMessage = mb_strtolower($arrDataAnswer["message"]["text"]);
            $getQuery =[
              "chat_id"     => $chatId,
              "text"        => $textMessage,
              "parse_mode"  => "html"
            ];
            $base->sendCurlInTg($getQuery);
      break;
    }

}elseif(!empty($arrDataAnswer["callback_query"])){
  $chatId = $arrDataAnswer["callback_query"]["message"]["chat"]["id"];
  $getQuery =[
    "chat_id"     => $chatId,
    "text"        => '–ù–∞–∂–∞–ª <b>–∫–Ω–æ–ø–æ—á–∫—É</b>!)',
    "parse_mode"  => "html"
  ];
  $base->sendCurlInTg($getQuery);

}