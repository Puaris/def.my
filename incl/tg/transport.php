<?php
namespace incl\Tg;
use lib\Tg As Tg;
class Transport extends Tg\Base{
    
    //const TOKEN=['MSB'=>'0006749279:AAH000CpMi670nbhjnF0dmO_Pjw-0nfYh0GFk','SBT'=>'5881854779:AAGFzyN03hZeL2Su9u12v61cfBKV0J6lm4E'];
      const Btn=[
        'Bus'=>'üöå –ê–≤—Ç–æ–±—É—Å',
        'MainMenu'=>'üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',

        'BusMarshrut'=>'üåç –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã',
    ];

    const BUS_MARSHRUT=[
      '1'=>['–ê–°-2','–ø–æ—Å. –°–∞—Ä—Ç–∞–Ω–∞'],
      '2'=>['23-–π –ú–ö–†','–ø–æ—Å. –ú–æ—Ä—è–∫–æ–≤'],
      '3'=>['–¢–¶ "–ü–æ—Ä—Ç–°–∏—Ç–∏"','–ú–ö–† –ö—É—Ä—á–∞—Ç–æ–≤–∞'],
      '4'=>['23-–π –ú–ö–†','–ø—Ä. –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞'],
      '5'=>['23-–π –ú–ö–†','—Å. –ò–ª—å–∏—á—ë–≤—Å–∫–æ–µ'],
      '6'=>['–ê–°-2','–ø–æ—Å. –ì–Ω—É—Ç–æ–≤–æ'],
      '7'=>['–ê–°-2','–ø–æ—Å. –ö–∞–º–µ–Ω—Å–∫'],
      '8'=>['–ø–æ—Å. –ü–µ—Å—á–∞–Ω—ã–π','–ø–æ—Å. –°–∞–¥–∫–∏'],
      '9'=>['—Å. –ó–∏—Ä–∫–∞-2','–ñ/–î –í–æ–∫–∑–∞–ª'],
      '10'=>['–¢–¶ "–ü–æ—Ä—Ç–°–∏—Ç–∏"','–ø–æ—Å. –ú–∏—Ä–Ω—ã–π'],
      '11'=>['–¢–§–î','–ü—Ä–∞–≤—ã–π –ë–µ—Ä–µ–≥'],
      '12'=>['—É–ª. –°–µ–º–µ–Ω–µ–Ω–∫–æ','–ñ/–î –í–æ–∫–∑–∞–ª'],
      '13'=>['—É–ª. –°–µ–º–µ–Ω–µ–Ω–∫–æ','–∫–≤-–ª –ê–∑–æ–≤—å–µ'],
      '14'=>['–ò–ª—å–∏—á—ë–≤—Å–∫–∏–π —Ä—ã–Ω–æ–∫','–î–û–°–ê–ê–§'],
      '15'=>['–ø–æ—Å. –Æ–∂–Ω—ã–π','—É–ª. –†–æ–≤–Ω–∞—è'],
      '16'=>['–ø–æ—Å. –Æ–∂–Ω—ã–π','–ü—Ä–∞–≤—ã–π –ë–µ—Ä–µ–≥'],
      '17'=>['–ø—Ä. –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞','–ø—Ä. –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞'],
      '18'=>['–∫–≤-–ª –ê–∑–æ–≤—å–µ','–ê–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –ª–∏—Ü–µ–π'],
      '19'=>['–ñ–ú–† –ó–∞–ø–∞–¥–Ω—ã–π','—É–ª. 130 –¢–∞–≥–∞–Ω—Ä–æ–≥—Å–∫–æ–π –¥–∏–≤–∏–∑–∏–∏'],
      '20'=>['–ê–°-2','–î–ö "–ò—Å–∫—Ä–∞"'],
      '1T'=>['–ø–æ—Å. –ö–∏—Ä–æ–≤–∫–∞','–î–û–°–ê–ê–§'],
      '2T'=>['–¢–§–î','–î—Ä–∞–º—Ç–µ–∞—Ç—Ä'],
      '3T'=>['–ñ–ú–† –ó–∞–ø–∞–¥–Ω—ã–π','–ü–µ—Ä–µ—Ö–æ–¥']
    ];

    public function __construct(){}

    
    public function FirstMenu(int|string $chatId):array{
      return [
              "chat_id"	=>$chatId,
              "text"  	=>"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç üöå",

              'reply_markup' =>json_encode([
                'keyboard' =>[
                      [
                        ['text' =>self::Btn['Bus']],
                      ],
                      [                      
                        ['text' =>self::Btn['MainMenu']],
                      ]
                ],      
                'one_time_keyboard' => false,//–≤—ã–ª–∞–∑–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –µ—Å–ª–∏ true
                'resize_keyboard'=>true
              ])
      ];
    }

    public function SecondMenuBus(int|string $chatId):array{
      return [
              "chat_id"	=>$chatId,
              "text"  	=>"–ê–≤—Ç–æ–±—É—Å—ã üöå",

              'reply_markup' =>json_encode([
                'keyboard' =>[
                      [
                        ['text' =>self::Btn['BusMarshrut']],
                      ],
                      [                      
                        ['text' =>Menu::Btn['Transport']],
                      ]
                ],      
                'one_time_keyboard' => false,//–≤—ã–ª–∞–∑–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –µ—Å–ª–∏ true
                'resize_keyboard'=>true
              ])
      ];
    }

    public function BusMarshrutMenu(int|string $chatId):array{

    //–ö–Ω–æ–ø–∫–∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ+
    
    $arrKeyboard=[];
    $i = 1;
    $arrKeyboardRow=[];
    foreach(self::BUS_MARSHRUT as $k => $v) {

    $arrStep=[];

    $arrStep['text']='‚Ññ'.$k.' ('.$v[0].' - '.$v[1].')';
    $arrStep['callback_data']='BusMarshrut_'.$k;

    array_push ($arrKeyboardRow,$arrStep);
    if ($i % 1 === 0){
        array_push($arrKeyboard,$arrKeyboardRow);
        $arrKeyboardRow=[];
    }$i++;
    }if(!empty($arrKeyboardRow))array_push($arrKeyboard,$arrKeyboardRow);

    return $this->inlineKeyboard($chatId,'–ú–∞—Ä—à—Ä—É—Ç—ã –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –∞–≤—Ç–æ–±—É—Å–æ–≤',$arrKeyboard);
    }

    
}